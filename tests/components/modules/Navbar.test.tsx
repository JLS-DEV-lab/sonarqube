/** This test was generated by a Gen AI solution */
import { render, screen } from "@testing-library/react";
import { BrowserRouter } from "react-router-dom";
import {Navbar} from "@modules";

describe("Navbar component", () => {
  test("renders without crashing", () => {
    render(
      <BrowserRouter>
        <Navbar />
      </BrowserRouter>
    );
  });

  test("renders all links correctly", () => {
    render(
      <BrowserRouter>
        <Navbar />
      </BrowserRouter>
    );

    expect(screen.getByText('Home')).not.toBeNull();
    expect(screen.getByText('Docs')).not.toBeNull();
    expect(screen.getByText('BDD')).not.toBeNull();
    expect(screen.getByText('NNA')).not.toBeNull();
    expect(screen.getByText('CM')).not.toBeNull();
    expect(screen.getByText('ROC')).not.toBeNull();
  });

  test("each link has the correct href attribute", () => {
    render(
      <BrowserRouter>
        <Navbar />
      </BrowserRouter>
    );

    expect(screen.getByText('Home').closest('a')).toHaveAttribute('href', '/');
    expect(screen.getByText('Docs').closest('a')).toHaveAttribute('href', '/introduction');
    expect(screen.getByText('BDD').closest('a')).toHaveAttribute('href', '/binary-decision-diagram');
    expect(screen.getByText('NNA').closest('a')).toHaveAttribute('href', '/neural-network-architecture');
    expect(screen.getByText('CM').closest('a')).toHaveAttribute('href', '/confusion-matrix');
    expect(screen.getByText('ROC').closest('a')).toHaveAttribute('href', '/roc-curve');
  });

  test("navbar has the correct class names", () => {
    render(
      <BrowserRouter>
        <Navbar />
      </BrowserRouter>
    );

    const navElement = screen.getByRole('navigation');
    expect(navElement).toHaveClass('bg-gray-200');

    const ulElement = screen.getByRole('list');
    expect(ulElement).toHaveClass('flex space-x-4');
  });
});